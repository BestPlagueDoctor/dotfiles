#!/bin/sh

mod="Mod4"

riverctl focus-follows-cursor normal
riverctl set-cursor-warp on-output-change

riverctl map normal $mod+Shift Return spawn foot
riverctl map normal $mod Q close
riverctl map normal $mod+Shift Backspace exit
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous
riverctl map normal $mod W focus-output next
riverctl map normal $mod E focus-output previous
riverctl map normal $mod+Shift W send-to-output next
riverctl map normal $mod+Shift E send-to-output previous
riverctl map normal $mod Return zoom
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"
riverctl map normal $mod Comma send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod Period send-layout-cmd rivertile "main-count -1"

riverctl map normal $mod+Mod1 H move left 100
riverctl map normal $mod+Mod1 J move down 100
riverctl map normal $mod+Mod1 K move up 100
riverctl map normal $mod+Mod1 L move right 100

riverctl map normal $mod+Mod1+Control H snap left
riverctl map normal $mod+Mod1+Control J snap down
riverctl map normal $mod+Mod1+Control K snap up
riverctl map normal $mod+Mod1+Control L snap right

riverctl map normal $mod+Mod1+Shift H resize horizontal -100
riverctl map normal $mod+Mod1+Shift J resize vertical 100
riverctl map normal $mod+Mod1+Shift K resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

riverctl map-pointer normal $mod BTN_LEFT move-view
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
tags=$((1 << ($i - 1)))

# Mod+[1-9] to focus tag [0-8]
riverctl map normal $mod $i set-focused-tags $tags

# Mod+Shift+[1-9] to tag focused view with tag [0-8]
riverctl map normal $mod+Shift $i set-view-tags $tags

# Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
riverctl map normal $mod+Control $i toggle-focused-tags $tags

# Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

riverctl map normal $mod Space toggle-float
riverctl map normal $mod F toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

riverctl map normal $mod D spawn 'bemenu-run -b'
riverctl map normal $mod P spawn 'emacsclient -c -n'
riverctl map normal $mod A spawn 'makoctl dismiss'
riverctl map normal $mod+Shift A spawn 'makoctl dismiss -a'
riverctl map normal $mod S spawn 'makoctl set-mode do-not-disturb'
riverctl map normal $mod+Shift S spawn 'makoctl set-mode default'
riverctl map normal $mod Grave spawn 'grim -g "$(slurp)" - | swappy -f -'
riverctl map normal $mod X spawn 'lock'

riverctl background-color 0x000000
riverctl border-color-focused 0xa5ab00
riverctl border-color-unfocused 0x000000 #0x0f8cf2

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile

wlr-randr \
  --output DP-1 --pos 3840,0 --mode 2560x1440@143.998001 \
  --output DP-2 --pos 0,0

mako &
~/.local/bin/chell

exec rivertile -view-padding 6 -outer-padding 6
